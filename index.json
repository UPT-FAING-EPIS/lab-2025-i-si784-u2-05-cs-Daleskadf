{
  "docs/Bank.Domain.Tests.BankAccountTests.html": {
    "href": "docs/Bank.Domain.Tests.BankAccountTests.html",
    "title": "Class BankAccountTests | Bank Domain",
    "summary": "Class BankAccountTests Namespace Bank.Domain.Tests Assembly Bank.Domain.Tests.dll public class BankAccountTests Inheritance object BankAccountTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Constructor_SetsInitialBalanceCorrectly() [Fact] public void Constructor_SetsInitialBalanceCorrectly() Credit_WhenAmountIsLessThanZero_ShouldThrowArgumentOutOfRangeException() [Fact] public void Credit_WhenAmountIsLessThanZero_ShouldThrowArgumentOutOfRangeException() Credit_WhenAmountIsZero_ShouldNotChangeBalance() [Fact] public void Credit_WhenAmountIsZero_ShouldNotChangeBalance() Credit_WithValidPositiveAmount_UpdatesBalanceCorrectly(double, double, double) [Theory] [InlineData(new object[] { 100, 50, 150 })] [InlineData(new object[] { 0, 25.5, 25.5 })] public void Credit_WithValidPositiveAmount_UpdatesBalanceCorrectly(double beginningBalance, double creditAmount, double expectedBalance) Parameters beginningBalance double creditAmount double expectedBalance double CustomerName_ReturnsCorrectName_AfterConstruction() [Fact] public void CustomerName_ReturnsCorrectName_AfterConstruction() Debit_WhenAmountIsEqualToBalance_ShouldUpdateBalanceToZero() [Fact] public void Debit_WhenAmountIsEqualToBalance_ShouldUpdateBalanceToZero() Debit_WhenAmountIsLessThanZero_ShouldThrowArgumentOutOfRange() [Fact] public void Debit_WhenAmountIsLessThanZero_ShouldThrowArgumentOutOfRange() Debit_WhenAmountIsMoreThanBalance_ShouldThrowArgumentOutOfRange() [Fact] public void Debit_WhenAmountIsMoreThanBalance_ShouldThrowArgumentOutOfRange() Debit_WhenAmountIsZero_ShouldNotChangeBalance() [Fact] public void Debit_WhenAmountIsZero_ShouldNotChangeBalance() MultiDebit_WithValidAmount_UpdatesBalance(double, double, double) [Theory] [InlineData(new object[] { 11.99, 4.55, 7.44 })] [InlineData(new object[] { 12.3, 5.2, 7.1 })] public void MultiDebit_WithValidAmount_UpdatesBalance(double beginningBalance, double debitAmount, double expected) Parameters beginningBalance double debitAmount double expected double"
  },
  "docs/Bank.Domain.Tests.html": {
    "href": "docs/Bank.Domain.Tests.html",
    "title": "Namespace Bank.Domain.Tests | Bank Domain",
    "summary": "Namespace Bank.Domain.Tests Classes BankAccountTests"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Bank Domain",
    "summary": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Bank Domain",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the Bank Domain homepage. | Bank Domain",
    "summary": "This is the Bank Domain homepage. Cobertura Stryker Models, Class Tests"
  }
}